{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","className","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAiBjD,OACC,sBAAMC,SAXc,SAAAC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,YAAY,0BACZC,UAAU,iBACVC,MAAQX,EACRY,SArBuB,SAAAT,GACzBF,EAAcE,EAAEU,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEJI,MAAMF,GAFF,cAEhBG,EAFgB,gBAGCA,EAAIC,OAHL,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATd,kBAcfM,GAde,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKP,UAAU,yCAAf,UACE,qBAAKqB,IAAMd,EAAMe,IAAML,IACvB,4BAAKA,QCFEM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACfhB,mBAAS,CAClCuB,KAAM,GACNY,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAmBzC,OAZAC,qBAAU,WACTvB,EAAQC,GACNuB,MAAK,SAAAC,GAEJH,EAAS,CACRd,KAAMiB,EACNL,SAAS,SAIX,CAACnB,IAEGoB,EDhB4BK,CAAazB,GAAjCa,EAFyB,EAEhCN,KAAeY,EAFiB,EAEjBA,QAEvB,OACC,qCACC,oBAAIxB,UAAU,oCAAd,SAAmDK,IACjDmB,GAAW,mBAAGxB,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEEkB,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEgBFe,EA5BM,WAAO,IAAD,EAEU1C,mBAAS,CAAC,cAFpB,mBAEnBQ,EAFmB,KAEPT,EAFO,KAS1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEES,EAAWiB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAECA,SAAWA,GADLA,Y,MChBb2B,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f9d8f5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\t\r\n\tconst handleInputChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// Validación\r\n\t\tif (inputValue.trim().length > 2){\r\n\t\t\tsetCategories(categories => [ inputValue, ...categories ]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit } >\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Agregar Categoría...\"\r\n\t\t\t\tclassName=\"input--style-6\"\r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={ handleInputChange } />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=92xjSLbtc15bmertnEh37OSQHx1kDTjq`;\r\n\tconst res = await fetch(url);\r\n\tconst { data } = await res.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t});\r\n\r\n\t// setImages(gifs);\r\n\treturn gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\t\r\n\tconst { data : images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => (\r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={ img.id }\r\n\t\t\t\t\t\t\t{ ...img } />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\t// El useEffect no puede ser async\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category)\r\n\t\t\t.then(imgs => {\r\n\t\t\t\t// setTimeout(() => {\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t})\r\n\t\t\t\t// }, 2500);\r\n\t\t\t})\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\tconst [categories, setCategories] = useState(['One Piece']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tsetCategories([...categories, 'Steins;Gate']);\r\n\t// \t// setCategories(cates => [...cates, 'Steins;Gate']);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\t\t\t\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category => (\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={ category }\r\n\t\t\t\t\t\t\tcategory={ category } /> \r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\t<GifExpertApp />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}